openapi: 3.1.0

info:
  title: Live Leaderboards
  summary: Send scores and see live updates of your friends playing golf.
  version: 0.2.0
  license:
    name: GPL-3.0
    url: https://www.gnu.org/licenses/gpl-3.0.en.html
    identifier: GPL-3.0-only
  contact:
    name: Evertras
    url: https://github.com/Evertras/live-leaderboards

servers:
  - url: http://localhost:8417
    description: Local server

# TODO: security :D
security: []

paths:
  /round:
    post:
      tags:
        - round
      summary: Creates a new round
      description: Creates a new round and returns the generated ID so it can be viewed/updated.
      operationId: createRound
      requestBody:
        description: Round information
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/RoundRequest"
            examples:
              simple:
                $ref: "#/components/examples/RoundPebble"
      responses:
        "201":
          description: Round created successfully
          content:
            application/json:
              examples:
                success:
                  summary: "Success"
                  value:
                    id: 43187519-9C19-49CB-91BE-C4231178CEB9
              schema:
                $ref: "#/components/schemas/CreatedRound"
  /latest/roundID:
    get:
      tags:
        - round
      summary: Gets the latest round ID
      description: Gets the round ID of the most recently created round
      operationId: getLatestRoundID
      responses:
        "200":
          description: Round ID retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/RoundID"
  /round/{roundID}:
    get:
      tags:
        - round
      summary: Gets round information
      description: Gets current round information including players and latest scores
      operationId: getRound
      parameters:
        - name: roundID
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Round retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Round"
  /round/{roundID}/score:
    put:
      tags:
        - round
      summary: Send a score event
      description: Send a score event, overwriting an older score event if it exists
      operationId: sendScore
      parameters:
        - name: roundID
          in: path
          required: true
          schema:
            type: string
      requestBody:
        description: Score information
        content:
          "application/json":
            schema:
              $ref: "#/components/schemas/PlayerScoreEvent"
      responses:
        "204":
          description: Score event sent successfully

# TODO: remove dynamodbav tags, this shouldn't double as a database schema...
# it's just really useful for now to avoid duplicating a lot of work!
components:
  examples:
    RoundPebble:
      summary: Pebble Beach
      value:
        title: Super Pebble Showdown
        course:
          name: Pebble Beach
          tees: White
          holes:
            - hole: 1
              par: 4
              distanceYards: 337
              strokeIndex: 6
            - hole: 2
              par: 5
              distanceYards: 458
              strokeIndex: 10
            - hole: 3
              par: 4
              distanceYards: 340
              strokeIndex: 12
            - hole: 4
              par: 4
              distanceYards: 290
              strokeIndex: 16
            - hole: 5
              par: 3
              distanceYards: 134
              strokeIndex: 14
            - hole: 6
              par: 5
              distanceYards: 465
              strokeIndex: 2
            - hole: 7
              par: 3
              distanceYards: 94
              strokeIndex: 18
            - hole: 8
              par: 4
              distanceYards: 364
              strokeIndex: 4
            - hole: 9
              par: 4
              distanceYards: 436
              strokeIndex: 8
            - hole: 10
              par: 4
              distanceYards: 408
              strokeIndex: 3
            - hole: 11
              par: 4
              distanceYards: 338
              strokeIndex: 9
            - hole: 12
              par: 3
              distanceYards: 176
              strokeIndex: 17
            - hole: 13
              par: 4
              distanceYards: 370
              strokeIndex: 7
            - hole: 14
              par: 5
              distanceYards: 490
              strokeIndex: 1
            - hole: 15
              par: 4
              distanceYards: 338
              strokeIndex: 13
            - hole: 16
              par: 4
              distanceYards: 368
              strokeIndex: 11
            - hole: 17
              par: 4
              distanceYards: 166
              strokeIndex: 15
            - hole: 18
              par: 5
              distanceYards: 506
              strokeIndex: 5
        players:
          - name: Evertras
          - name: John Rahm
          - name: 松山英樹
          - name: John Daly

  schemas:
    Course:
      x-oapi-codegen-extra-tags:
        dynamodbav: "c"
      type: object
      required:
        - name
        - holes
      properties:
        name:
          x-oapi-codegen-extra-tags:
            dynamodbav: "n"
          maxLength: 50
          type: string
          examples:
            - Pebble Beach
        tees:
          x-oapi-codegen-extra-tags:
            dynamodbav: "t"
          maxLength: 20
          type: string
          examples:
            - White
        holes:
          x-oapi-codegen-extra-tags:
            dynamodbav: "h"
          type: array
          minItems: 1
          maxItems: 36
          items:
            $ref: "#/components/schemas/Hole"
    CreatedRound:
      type: object
      required:
        - id
      properties:
        id:
          $ref: "#/components/schemas/RoundID"
    Hole:
      type: object
      required:
        - hole
        - par
      properties:
        hole:
          $ref: "#/components/schemas/HoleNumber"
        par:
          x-oapi-codegen-extra-tags:
            dynamodbav: "p"
          type: integer
          minimum: 3
          maximum: 5
          examples:
            - 3
            - 4
            - 5
        distanceYards:
          x-oapi-codegen-extra-tags:
            dynamodbav: "d"
          type: integer
          minimum: 1
          maximum: 1000
          examples:
            - 124
            - 380
            - 602
        strokeIndex:
          x-oapi-codegen-extra-tags:
            dynamodbav: "si"
          type: integer
          minimum: 1
          maximum: 18
          examples:
            - 14
            - 8
            - 11
    HoleNumber:
      x-oapi-codegen-extra-tags:
        dynamodbav: "n"
      type: integer
      minimum: 1
      maximum: 36
      examples:
        - 1
        - 2
        - 3
    HoleScore:
      x-oapi-codegen-extra-tags:
        dynamodbav: "hs"
      type: object
      required:
        - hole
        - score
      properties:
        hole:
          $ref: "#/components/schemas/HoleNumber"
        score:
          x-oapi-codegen-extra-tags:
            dynamodbav: "s"
          type: integer
          minimum: 1
          maximum: 30
          examples:
            - 4
    PlayerData:
      x-oapi-codegen-extra-tags:
        dynamodbav: "pd"
      type: object
      required:
        - name
      properties:
        name:
          x-oapi-codegen-extra-tags:
            dynamodbav: "n"
          examples:
            - John Rahm
            - 松山英樹
          type: string
          minLength: 1
          maxLength: 50
    PlayerGroup:
      x-oapi-codegen-extra-tags:
        dynamodbav: "pg"
      type: array
      minItems: 1
      maxItems: 12
      uniqueItems: true
      items:
        $ref: "#/components/schemas/PlayerData"
    PlayerScore:
      x-oapi-codegen-extra-tags:
        dynamodbav: "ps"
      type: array
      minItems: 0
      maxItems: 36
      items:
        $ref: "#/components/schemas/HoleScore"
    PlayerScoreEvent:
      type: object
      allOf:
        - $ref: "#/components/schemas/HoleScore"
        - type: object
          required:
            - playerIndex
          properties:
            playerIndex:
              minimum: 0
              type: integer
              examples:
                - 0
    Round:
      type: object
      required:
        - id
        - title
        - course
        - players
      properties:
        id:
          $ref: "#/components/schemas/RoundID"
        title:
          $ref: "#/components/schemas/RoundTitle"
        course:
          $ref: "#/components/schemas/Course"
        players:
          $ref: "#/components/schemas/RoundPlayers"
    RoundID:
      type: string
      x-oapi-codegen-extra-tags:
        dynamodbav: "id"
      x-go-type: uuid.UUID
      x-go-type-import:
        path: github.com/google/uuid
      examples:
        - "7F4EF598-1F47-4E01-8408-EDDC71FE53E9"
    RoundPlayers:
      x-oapi-codegen-extra-tags:
        dynamodbav: "rp"
      type: array
      minItems: 1
      maxItems: 12
      uniqueItems: true
      items:
        $ref: "#/components/schemas/RoundPlayerData"
    RoundPlayerData:
      x-oapi-codegen-extra-tags:
        dynamodbav: "rpd"
      type: object
      allOf:
        - $ref: "#/components/schemas/PlayerData"
        - type: object
          required:
            - scores
          properties:
            scores:
              $ref: "#/components/schemas/PlayerScore"
    RoundTitle:
      x-oapi-codegen-extra-tags:
        dynamodbav: "t"
      type: string
      maxLength: 50
      examples:
        - Super Showdown
    RoundRequest:
      x-oapi-codegen-extra-tags:
        dynamodbav: "req"
      type: object
      required:
        - course
        - players
      properties:
        title:
          $ref: "#/components/schemas/RoundTitle"
        course:
          $ref: "#/components/schemas/Course"
        players:
          $ref: "#/components/schemas/PlayerGroup"

tags:
  - name: round
    description: Round operations
