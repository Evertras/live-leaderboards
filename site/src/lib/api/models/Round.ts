/* tslint:disable */
/* eslint-disable */
/**
 * Live Leaderboards
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from "../runtime";
import type { Course } from "./Course";
import { CourseFromJSON, CourseFromJSONTyped, CourseToJSON } from "./Course";

/**
 *
 * @export
 * @interface Round
 */
export interface Round {
  /**
   *
   * @type {any}
   * @memberof Round
   */
  id: any | null;
  /**
   *
   * @type {any}
   * @memberof Round
   */
  title: any | null;
  /**
   *
   * @type {Course}
   * @memberof Round
   */
  course: Course;
  /**
   *
   * @type {any}
   * @memberof Round
   */
  players: any | null;
}

/**
 * Check if a given object implements the Round interface.
 */
export function instanceOfRound(value: object): boolean {
  let isInstance = true;
  isInstance = isInstance && "id" in value;
  isInstance = isInstance && "title" in value;
  isInstance = isInstance && "course" in value;
  isInstance = isInstance && "players" in value;

  return isInstance;
}

export function RoundFromJSON(json: any): Round {
  return RoundFromJSONTyped(json, false);
}

export function RoundFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Round {
  if (json === undefined || json === null) {
    return json;
  }
  return {
    id: json["id"],
    title: json["title"],
    course: CourseFromJSON(json["course"]),
    players: json["players"],
  };
}

export function RoundToJSON(value?: Round | null): any {
  if (value === undefined) {
    return undefined;
  }
  if (value === null) {
    return null;
  }
  return {
    id: value.id,
    title: value.title,
    course: CourseToJSON(value.course),
    players: value.players,
  };
}
